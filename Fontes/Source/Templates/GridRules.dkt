<%@ Template Language="C#" TargetLanguage="GX" Description="Selection and Grid Tabs Rules" %>
<%@ Include Name="Constants.cs" %>
<%@ Assembly Name="Heurys.Patterns.HPattern" %>
<%@ Assembly Name="Artech.Architecture.Common" %>
<%@ Assembly Name="Artech.Common" %>
<%@ Assembly Name="Artech.Common.Helpers" %>
<%@ Assembly Name="Artech.Common.Properties" %>
<%@ Assembly Name="Artech.Genexus.Common" %>
<%@ Assembly Name="Artech.Packages.Patterns" %>
<%@ Assembly Name="Artech.Udm.Framework" %>
<%@ Assembly Name="Artech.Template.Base" %>
<%@ Assembly Name="System.Xml" %>
<%@ Assembly Name="StringTemplate" %>
<%@ Assembly Name="Artech.Architecture.UI.Framework" %>
<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="Artech.Common.Collections" %>
<%@ Import Namespace="Heurys.Patterns.HPattern" %>
<%@ Import Namespace="Artech.Common.Properties" %>
<%@ Import Namespace="Artech.Architecture.Common.Collections" %>
<%@ Import Namespace="Artech.Architecture.Common.Objects" %>
<%@ Import Namespace="Artech.Udm.Framework" %>
<%@ Import Namespace="Artech.Genexus.Common" %>
<%@ Import Namespace="Artech.Genexus.Common.Helpers" %>
<%@ Import Namespace="Artech.Genexus.Common.Objects" %>
<%@ Import Namespace="Artech.Genexus.Common.Parts" %>
<%@ Import Namespace="Artech.Packages.Patterns" %>
<%@ Import Namespace="Artech.Packages.Patterns.Objects" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Xml" %>
<%@ Import Namespace="Antlr.StringTemplate" %>
<%@ Import Namespace="Artech.Genexus.Common.Wiki" %>
<%@ Property Name="Object" Type="Artech.Architecture.Common.Objects.KBObject" %>
<%@ Property Name="Part" Type="Artech.Architecture.Common.Objects.KBObjectPart" %>
<%@ Property Name="Instance" Type="Heurys.Patterns.HPattern.HPatternInstance" %>
<%@ Property Name="GridObject" Type="Heurys.Patterns.HPattern.IGridObject" %>
<%
	
	string objtype = TabElement.ObjTypeValue.All;
	HPatternSettings settings = Instance.Settings;
	Transaction trn = Instance.Transaction.Transaction;

	FormElement form = null;

	bool geraBC = false;
	string codeTab = "";
	TabElement tabe = null;
	if (GridObject is TabElement) {
	
		tabe = (TabElement)GridObject;
		objtype = tabe.ObjType;
		codeTab = tabe.Code;	
		form = tabe.Transaction.Form;
		
		if (tabe.Transaction.Transaction != null) trn = tabe.Transaction.Transaction;
	
		geraBC = Instance.Transaction.WebBC;
		/*
		geraBC = settings.Template.DataEntryWebPanelBC;
		if (Instance.Transaction.DataEntryWebPanelBC.ToLower() == "true")
			geraBC = true;
		if (Instance.Transaction.DataEntryWebPanelBC.ToLower() == "false")
			geraBC = false;
		*/
	}
	string ruleParm = "";
	if (objtype == TabElement.ObjTypeValue.Trn) 
	{
		ruleParm = tabe.Transaction.GeraParm(false); 
	} 
	else 
	{
		if (geraBC) 
		{
			ruleParm = Instance.Transaction.GeraParm(true);
		} 
		else 
		{
			if (GridObject is PromptElement) 
			{
				ruleParm = GridObject.Parameters.RuleWithVariablesPrompt();
			} 
			else 
			{ 
				if (GridObject is TabElement) 
				{
					ruleParm = GridObject.Parameters.RuleTabGrid();
				} 
				else
				{
					ruleParm = GridObject.Parameters.RuleWithVariables();
				}
			} 
		}
	} 
%>
<Part type="<%= PartType.Rules %>">
	<Source><![CDATA[<%=ruleParm%>
<%
	if (GridObject.Filter != null)
	{
		IBaseCollection<FilterAttributeElement> filterPrompts = GridObject.Filter.FilterAttributes.FindAll(delegate (FilterAttributeElement filterAttribute) { return (filterAttribute.Prompt != null); });
		if (filterPrompts.Count > 0)
		{
%>

<%
			foreach (FilterAttributeElement filterAttribute in filterPrompts)
			{
%>
prompt(<%= filterAttribute.Prompt.Name %>, <%= filterAttribute.VariableName %>);
<%
			}
		}
		filterPrompts = GridObject.Filter.FilterAttributes.FindAll(delegate (FilterAttributeElement filterAttribute) { return (filterAttribute.Link != null); });
		if (filterPrompts.Count > 0)
		{
%>

<%
			foreach (FilterAttributeElement filterAttribute in filterPrompts)
			{
				if (filterAttribute.Links != null) {
					foreach (LinkElement link in filterAttribute.Links) {
						StringBuilder ret = new StringBuilder();
						Heurys.Patterns.HPattern.Helpers.Template.RulePrompt(ret, link, filterAttribute.Name , settings,"&");
%>
<%=ret.ToString()%>
<%
					}
				}
			}
		}		
	}
%>
<%
	if (geraBC && form != null) 
	{
%>
<%=Heurys.Patterns.HPattern.Helpers.Template.PromptRules(form, settings,String.Format("&{0}BC.",trn.Name))%>
<%
	}
	
	string codes = Heurys.Patterns.HPattern.Helpers.TemplateInternal.RuleCodes(Heurys.Patterns.HPattern.Helpers.TemplateInternal.CodeType.WebPanel, settings);
	if (!String.IsNullOrEmpty(codes))
	{
%>
<%= codes%>
<%    
	}
	
%>
]]>
	</Source>
</Part>
