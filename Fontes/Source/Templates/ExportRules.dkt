<%@ Template Language="C#" TargetLanguage="GX" Description="Export Procedure Rules" %>
<%@ Include Name="Constants.cs" %>
<%@ Assembly Name="Heurys.Patterns.HPattern" %>
<%@ Import Namespace="Heurys.Patterns.HPattern" %>
<%@ Property Name="Object" Type="Artech.Architecture.Common.Objects.KBObject" %>
<%@ Property Name="Part" Type="Artech.Architecture.Common.Objects.KBObjectPart" %>
<%@ Property Name="Instance" Type="Artech.Packages.Patterns.Objects.PatternInstance" %>
<%@ Property Name="Element" Type="Artech.Packages.Patterns.Objects.PatternInstanceElement" %>

<Part type="<%= PartType.Rules %>">
<%
	HPatternInstance wwInstance = HPatternInstance.Load(Instance);
	HPatternSettings settings = wwInstance.Settings;
	IGridObject gridObject = wwInstance.GetElement<IGridObject>(Element);
	IGridObject GridObject = gridObject;
	
	string gridParameters;
	if (gridObject.Actions.Export != null)
		gridParameters = gridObject.Actions.Export.Parameters.ConcatenatePrc("in:", true);
	else
		gridParameters = gridObject.Parameters.ConcatenatePrc("in:", true);
	
	string exportParameters = (gridParameters != String.Empty ? gridParameters + ", " : String.Empty);
	
try {
int ch = settings.DynamicFilters.MaxChoices;
bool geraDF = false;
if (GridObject.Filter != null) {
	if (GridObject.Filter.Dynamicfilters != null)
		geraDF = (GridObject.Filter.Dynamicfilters.Count > 0 && ch > 0) ? true : false;
}
if (geraDF) {
	for (int i = 1;i<=ch;i++) {
		exportParameters += "in:&Campo"+i.ToString().Trim()+",";
		exportParameters += "in:&CondD"+i.ToString().Trim()+",";
		exportParameters += "in:&Carac"+i.ToString().Trim()+",";
		exportParameters += "in:&Numer"+i.ToString().Trim()+",";
		exportParameters += "in:&DataD"+i.ToString().Trim()+",";
	}
	
}
} catch(System.Exception e) {		
	System.Windows.Forms.MessageBox.Show("Erro var: " + e.Message + Environment.NewLine + e.StackTrace);                   
}	
	
	exportParameters += "out:&Filename, out:&ErrorMessage";
%>
	<Source><![CDATA[
parm(<%= exportParameters %>);
<%
	string codes = Heurys.Patterns.HPattern.Helpers.TemplateInternal.RuleCodes(Heurys.Patterns.HPattern.Helpers.TemplateInternal.CodeType.Procedure, settings);
	if (!String.IsNullOrEmpty(codes))
	{
%>
<%= codes%>
<%    
	}
%>
]]>
	</Source>
</Part>
